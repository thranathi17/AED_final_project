/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.DoctorJPanels;

import Business.Business;
import Doctor.Doctor;
import Hospital.Appointment;
import Hospital.Hospital;
import UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MC
 */
public class DoctorAppointmentsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorAppointmentsJPanel
     */
    public Business business;
    public UserAccount userAccount;
    DefaultTableModel aptsTableModel;
    
    public DoctorAppointmentsJPanel() {
        initComponents();
    }
    
    public DoctorAppointmentsJPanel(Business business, UserAccount userAccount) {
        initComponents();
        this.business = business;
        this.userAccount = userAccount;
        this.aptsTableModel = (DefaultTableModel) docApptsTable.getModel();
        
        displayAppointments();
    }
    
    public void displayAppointments()
    {
        ArrayList<Appointment> aps = this.business.getAppointments().getAppointments();
        if(aps.size() >= 0) {
            aptsTableModel.setRowCount(0);
            for(Appointment a: aps) {
                if (a.getDoctor().getId().equals(userAccount.getPersonId()))
                {
                    Object row[] = new Object[6];
                    row[0] = a.getAppointmentId();
                    row[1] = a.getHospital().getHospitalName();                 
                    row[2] = a.getAppointmentDate();
                    row[3] = a.getAppointmentHour();
                    row[4] = a.getStatus();
                    row[5] = a.getPatient().getFirstName() + ' ' + a.getPatient().getLastName();
                    aptsTableModel.addRow(row);
                }
            }
        }        
    }
    
    public void displayAppointmentsByPatient(String patientName)
    {
        ArrayList<Appointment> aps = this.business.getAppointments().getAppointments();
        if(aps.size() >= 0) {
            aptsTableModel.setRowCount(0);
            for(Appointment a: aps) {
                if (a.getDoctor().getId().equals(userAccount.getPersonId())
                        && a.getPatient().getFirstName().contains(patientName))
                {
                    Object row[] = new Object[6];
                    row[0] = a.getAppointmentId();
                    row[1] = a.getHospital().getHospitalName();                 
                    row[2] = a.getAppointmentDate();
                    row[3] = a.getAppointmentHour();
                    row[4] = a.getStatus();
                    row[5] = a.getPatient().getFirstName() + ' ' + a.getPatient().getLastName();
                    aptsTableModel.addRow(row);
                }
            }
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        docApptsTable = new javax.swing.JTable();
        patientNameSearchField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        docApptsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Apt Id", "Hospital Name", "Date", "Time", "Status", "Patient Name"
            }
        ));
        jScrollPane1.setViewportView(docApptsTable);

        jButton1.setText("Search by Patient Name");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(patientNameSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientNameSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(377, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String patientName = patientNameSearchField.getText();
        displayAppointmentsByPatient(patientName);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable docApptsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField patientNameSearchField;
    // End of variables declaration//GEN-END:variables
}
